# Original idea by @ISnackable. Thanks to him for handling the hardest parts!
# https://github.com/ISnackable/YTCubePlus/blob/main/.github/workflows/Build.yml

name: Build and Release uYouEnhanced

on:
  workflow_dispatch:
    inputs:
      sdk_version:
        description: "iOS SDK Version"
        default: "16.5"
        required: true
        type: string
      decrypted_youtube_url:
        description: "Direct URL of the decrypted IPA"
        default: ""
        required: true
        type: string
      commit_id:
        description: "(Optional) Commit ID to build at"
        default: ""
        required: false
        type: string
      upload_artifact:
        description: "Upload IPA as artifact"
        default: true
        required: false
        type: boolean
      create_release:
        description: "Create a draft release"
        default: false
        required: false
        type: boolean
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build App
    runs-on: macos-12
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v4.1.6
        with:
          path: main
          ref: ${{ github.event.inputs.commit_id || github.ref }}
          submodules: recursive

      - name: Install Dependencies
        run: brew install ldid dpkg make

      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH 

      - name: Setup Theos
        uses: actions/checkout@v4.1.6
        with:
          repository: theos/theos
          ref: 5bfdc3cb7133ec1cab43182115d902e2b57c9eac
          path: theos
          submodules: recursive
      
      - name: SDK Caching
        id: SDK
        uses: actions/cache@v4.0.2
        env:
          cache-name: iOS-${{ inputs.sdk_version }}-SDK
        with:
          path: theos/sdks/
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Download iOS SDK
        if: steps.SDK.outputs.cache-hit != 'true'
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/theos/sdks/
          cd sdks
          git sparse-checkout set --no-cone iPhoneOS${{ inputs.sdk_version }}.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Setup Theos Jailed
        uses: actions/checkout@v4.1.6
        with:
          repository: qnblackcat/theos-jailed
          ref: master
          path: theos-jailed
          submodules: recursive

      - name: Install Theos Jailed
        run: |
          ./theos-jailed/install
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Prepare YouTube iPA
        id: prepare_youtube
name: Download and Unzip IPA File

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set environment variables
      run: |
        echo "THEOS=/Users/runner/work/red-book-tweak/red-book-tweak/theos" >> $GITHUB_ENV
        echo "YOUTUBE_URL=https://www.dropbox.com/scl/fi/e4oyb7060709bw0ypbizs/com.xingin.discover-8.43.1.ipa?rlkey=7ez9a34qotw9e56w19wn043tv&st=m3n71d93&dl=0" >> $GITHUB_ENV

    - name: Download and Unzip IPA File
      run: |
        #!/bin/bash -e

        # Download the file using curl
        curl -L "$YOUTUBE_URL" --no-verbose -o main/YouTube.ipa
        if [ $? -ne 0 ]; then
            echo "Error downloading file."
            exit 1
        fi

        # Check the file type
        file_type=$(file --mime-type -b main/YouTube.ipa)
        if [ "$file_type" != "application/zip" ]; then
            echo "Downloaded file is not a zip file."
            exit 1
        fi

        # Proceed if the file is a zip file
        cd /Users/runner/work/red-book-tweak/red-book-tweak/main
        mv YouTube.ipa YouTube.zip
        unzip -q YouTube.zip
        if [ $? -ne 0 ]; then
            echo "Error unzipping file."
            exit 1
        fi

        echo "File downloaded and unzipped successfully."

        env:
          THEOS: ${{ github.workspace }}/theos
          YOUTUBE_URL: ${{ inputs.decrypted_youtube_url }}

      - name: Fix compiling & Build Package
        id: build_package
        run: |
          cd ${{ github.workspace }}/main
          make package THEOS_PACKAGE_SCHEME=rootless IPA=Payload/YouTube.app FINALPACKAGE=1
          echo "package=$(ls -t packages | head -n1)" >>$GITHUB_OUTPUT
          echo -e "==> \033[1mSHASUM256: $(shasum -a 256 packages/*.ipa | cut -f1 -d' ')\033[0m"
          echo -e "==> \033[1mBundle ID: ${{ env.BUNDLE_ID }}\033[0m"

        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Upload Artifact
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4.3.3
        with:
          name: app
          path: ${{ github.workspace }}/main/packages/${{ steps.build_package.outputs.package }}
          if-no-files-found: error
